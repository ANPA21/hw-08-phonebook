{"version":3,"file":"static/js/484.b0932743.chunk.js","mappings":"iJAAO,IAAMA,EACX,+I,mKCGWC,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,sVAgBVE,GAAcF,EAAAA,EAAAA,IAAO,QAAPA,CAAH,6HAOXG,GAAcH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,yJAOXK,GAAYL,EAAAA,EAAAA,IAAOM,EAAAA,EAAPN,CAAH,wFAIlB,gBAAGO,EAAH,EAAGA,MAAH,qCACiBA,EAAMC,QAAQC,QAAQC,GADvC,qBAEKH,EAAMC,QAAQC,QAAQE,KAF3B,U,SC1BEC,EAAeC,EAAAA,KAAaC,MAAM,CACtCC,KAAMF,EAAAA,KACHG,IAAI,EAAG,mBACPC,IAAI,GAAI,kBACRC,SAAS,YACZC,MAAON,EAAAA,KACJO,QAAQtB,EAAAA,EAAY,wBACpBoB,SAAS,YACZG,SAAUR,EAAAA,KACPG,IAAI,EAAG,oBACPC,IAAI,GAAI,qBACRC,SAAS,cAEDI,EAAa,WACxB,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAAC,KAAD,CACEC,cAAe,CACbV,KAAM,GACNI,MAAO,GACPE,SAAU,IAEZK,SAAU,SAACC,EAAQC,GACjBL,GAASM,EAAAA,EAAAA,UAASF,IAClBC,EAAQE,WACT,EACDC,iBAAkBnB,EAVpB,UAYE,UAACb,EAAD,YACE,UAACG,EAAD,YACE,SAACC,EAAD,CAAa6B,KAAK,OAAOjB,KAAK,OAAOkB,YAAY,cACjD,SAAC,KAAD,CAAcC,UAAU,OAAOnB,KAAK,aAEtC,UAACb,EAAD,YACE,SAACC,EAAD,CAAa6B,KAAK,QAAQjB,KAAK,QAAQkB,YAAY,WACnD,SAAC,KAAD,CAAcC,UAAU,OAAOnB,KAAK,cAEtC,UAACb,EAAD,YACE,SAACC,EAAD,CAAa6B,KAAK,OAAOjB,KAAK,WAAWkB,YAAY,cACrD,SAAC,KAAD,CAAcC,UAAU,OAAOnB,KAAK,iBAEtC,SAACV,EAAD,CAAW8B,MAAM,UAAUH,KAAK,SAAhC,SAAyC,gBAMhD,EC1DYI,GAAepC,EAAAA,EAAAA,IAAO,MAAPA,CAAH,8hBAoBZqC,GAAmBrC,EAAAA,EAAAA,IAAO,OAAPA,CAAH,6C,UCJ7B,EAXiB,WACf,OACE,UAACoC,EAAD,YACE,SAACE,EAAA,EAAD,WACE,2BAAO,eAET,SAACD,EAAD,UAAkB,qCAClB,SAACf,EAAD,MAGL,C","sources":["components/utils/global.js","components/SignupForm/SignupForm.styled.js","components/SignupForm/SignupForm.js","components/utils/Register.styled.js","pages/Register.js"],"sourcesContent":["export const EMAIL_REGX =\n  /^(([^<>()[\\]\\\\.,;:\\s@\"]+(.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@(([[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}])|(([a-zA-Z-0-9]+.)+[a-zA-Z]{2,}))$/;\n","import { styled } from '@mui/material';\nimport { Form, Field } from 'formik';\nimport { Button } from '@mui/material';\n\nexport const FormStyled = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  margin-top: 25px;\n\n  @media screen and (max-width: 479px) {\n  }\n  @media screen and (min-width: 480px) and (max-width: 767px) {\n  }\n  @media screen and (min-width: 768px) and (max-width: 1023px) {\n  }\n  @media screen and (min-width: 1024px) {\n  }\n`;\n\nexport const LabelStyled = styled(`label`)`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  font-weight: 500;\n`;\n\nexport const FieldStyled = styled(Field)`\n  padding: 5px;\n  background-color: #e0f2f1;\n  border: 1px solid rgb(0, 105, 92);\n  border-radius: 4px;\n  min-height: 35px;\n`;\nexport const SignUpBtn = styled(Button)`\n  margin-top: 5px;\n  width: 70vw;\n  max-width: 300px;\n  ${({ theme }) => `\nbackground-color : ${theme.palette.buttons.bg};\ncolor: ${theme.palette.buttons.text};\n`}\n`;\n","import * as Yup from 'yup';\nimport { ErrorMessage, Formik } from 'formik';\nimport { EMAIL_REGX } from 'components/utils/global';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport {\n  FieldStyled,\n  FormStyled,\n  LabelStyled,\n  SignUpBtn,\n} from './SignupForm.styled';\n\nconst SignupSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Name too Short!')\n    .max(20, 'Name too Long!')\n    .required('Required'),\n  email: Yup.string()\n    .matches(EMAIL_REGX, 'Invalid email format')\n    .required('Required'),\n  password: Yup.string()\n    .min(7, 'Min 7 characters')\n    .max(20, 'Max 20 characters')\n    .required('Required'),\n});\nexport const SignupForm = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        email: '',\n        password: '',\n      }}\n      onSubmit={(values, actions) => {\n        dispatch(register(values));\n        actions.resetForm();\n      }}\n      validationSchema={SignupSchema}\n    >\n      <FormStyled>\n        <LabelStyled>\n          <FieldStyled type=\"text\" name=\"name\" placeholder=\"Username\" />\n          <ErrorMessage component=\"span\" name=\"name\" />\n        </LabelStyled>\n        <LabelStyled>\n          <FieldStyled type=\"email\" name=\"email\" placeholder=\"Email\" />\n          <ErrorMessage component=\"span\" name=\"email\" />\n        </LabelStyled>\n        <LabelStyled>\n          <FieldStyled type=\"text\" name=\"password\" placeholder=\"Password\" />\n          <ErrorMessage component=\"span\" name=\"password\" />\n        </LabelStyled>\n        <SignUpBtn color=\"buttons\" type=\"submit\">\n          Sign Up\n        </SignUpBtn>\n      </FormStyled>\n    </Formik>\n  );\n};\n","import { styled } from '@mui/material';\n\nexport const RegisterPage = styled(`div`)`\n  display: flex;\n  flex-direction: column;\n  padding: 0 15px;\n  align-items: center;\n  min-height: calc(100vh - 281px);\n  margin-top: 25px;\n  @media screen and (max-width: 479px) {\n  }\n  @media screen and (min-width: 480px) and (max-width: 767px) {\n    padding: 0 20px;\n    min-height: calc(100vh - 311px);\n  }\n  @media screen and (min-width: 768px) and (max-width: 1023px) {\n    min-height: calc(100vh - 244px);\n  }\n  @media screen and (min-width: 1024px) {\n    min-height: calc(100vh - 244px);\n  }\n`;\nexport const RegisterPageText = styled(`span`)`\n  font-weight: 700;\n`;\n","import { SignupForm } from 'components/SignupForm/SignupForm';\nimport {\n  RegisterPage,\n  RegisterPageText,\n} from 'components/utils/Register.styled';\nimport { Helmet } from 'react-helmet';\n\nconst Register = () => {\n  return (\n    <RegisterPage>\n      <Helmet>\n        <title>Sign Up</title>\n      </Helmet>\n      <RegisterPageText>Sign up, and get your contacts!</RegisterPageText>\n      <SignupForm />\n    </RegisterPage>\n  );\n};\nexport default Register;\n"],"names":["EMAIL_REGX","FormStyled","styled","Form","LabelStyled","FieldStyled","Field","SignUpBtn","Button","theme","palette","buttons","bg","text","SignupSchema","Yup","shape","name","min","max","required","email","matches","password","SignupForm","dispatch","useDispatch","initialValues","onSubmit","values","actions","register","resetForm","validationSchema","type","placeholder","component","color","RegisterPage","RegisterPageText","Helmet"],"sourceRoot":""}